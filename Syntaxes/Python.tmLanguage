<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>comment</key>
	<string>
	todo:
		list comprehension / generator comprehension scope.
		
	</string>
	<key>fileTypes</key>
	<array>
		<string>py</string>
		<string>rpy</string>
		<string>cpy</string>
		<string>SConstruct</string>
		<string>Sconstruct</string>
		<string>sconstruct</string>
		<string>SConscript</string>
	</array>
	<key>firstLineMatch</key>
	<string>^#!/.*\bpython\b</string>
	<key>foldingStartMarker</key>
	<string>^\s*(def|class)\s+([.a-zA-Z0-9_ b]+)\s*(\((.*)\))?\s*:|\{\s*$|\(\s*$|\[\s*$|^\s*"""(?=.)(?!.*""")</string>
	<key>foldingStopMarker</key>
	<string>^\s*$|^\s*\}|^\s*\]|^\s*\)|^\s*"""\s*$</string>
	<key>keyEquivalent</key>
	<string>^~P</string>
	<key>name</key>
	<string>Python</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.python</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(#).*$\n?</string>
			<key>name</key>
			<string>comment.line.number-sign.python</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(?i:(0x\h*)L)\b</string>
			<key>name</key>
			<string>constant.numeric.integer.long.hexadecimal.python</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(?i:(0x\h*))\b</string>
			<key>name</key>
			<string>constant.numeric.integer.hexadecimal.python</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(?i:(0[0-7]+)L)\b</string>
			<key>name</key>
			<string>constant.numeric.integer.long.octal.python</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(0[0-7]+)\b</string>
			<key>name</key>
			<string>constant.numeric.integer.octal.python</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(?i:(((\d+(\.(?=[^a-zA-Z_])\d*)?|(?&lt;=[^0-9a-zA-Z_])\.\d+)(e[\-\+]?\d+)?))J)\b</string>
			<key>name</key>
			<string>constant.numeric.complex.python</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(?i:(\d+\.\d*(e[\-\+]?\d+)?))(?=[^a-zA-Z_])</string>
			<key>name</key>
			<string>constant.numeric.float.python</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?&lt;=[^0-9a-zA-Z_])(?i:(\.\d+(e[\-\+]?\d+)?))\b</string>
			<key>name</key>
			<string>constant.numeric.float.python</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(?i:(\d+e[\-\+]?\d+))\b</string>
			<key>name</key>
			<string>constant.numeric.float.python</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(?i:([1-9]+[0-9]*|0)L)\b</string>
			<key>name</key>
			<string>constant.numeric.integer.long.decimal.python</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b([1-9]+[0-9]*|0)\b</string>
			<key>name</key>
			<string>constant.numeric.integer.decimal.python</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>keywords that delimit flow blocks</string>
			<key>match</key>
			<string>\b(elif|else|except|finally|for|if|try|while|with)\b</string>
			<key>name</key>
			<string>keyword.control.flow.python</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>keywords that alter flow from within a block</string>
			<key>match</key>
			<string>\b(break|continue|pass|raise|return|yield)\b</string>
			<key>name</key>
			<string>keyword.control.flow.python</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>keyword operators that evaluate to True or False</string>
			<key>match</key>
			<string>\b(and|in|is|not|or)\b</string>
			<key>name</key>
			<string>keyword.operator.logical.python</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\+\=|-\=|\*\=|/\=|//\=|%\=|&amp;\=|\|\=|\^\=|&gt;&gt;\=|&lt;&lt;\=|\*\*\=</string>
			<key>name</key>
			<string>keyword.operator.assignment.augmented.python</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\+|\-|\*|\*\*|/|//|%|&lt;&lt;|&gt;&gt;|&amp;|\||\^|~</string>
			<key>name</key>
			<string>keyword.operator.arithmetic.python</string>
		</dict>
		<dict>
			<key>match</key>
			<string>&lt;|&gt;|&lt;\=|&gt;\=|\=\=|!\=|&lt;&gt;</string>
			<key>name</key>
			<string>keyword.operator.comparison.python</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\=</string>
			<key>name</key>
			<string>keyword.operator.assignment.python</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(self|cls)\b</string>
			<key>name</key>
			<string>variable.language.python</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.class.python</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.type.class.python</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.class.begin.python</string>
				</dict>
			</dict>
			<key>match</key>
			<string>^\s*(class)\s+([a-zA-Z_][a-zA-Z_0-9]*)\s*(:)</string>
			<key>name</key>
			<string>meta.class.old-style.python</string>
		</dict>
		<dict>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.class.python</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.type.class.python</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.missing-inheritance.python</string>
				</dict>
			</dict>
			<key>match</key>
			<string>^\s*(class)\s+([a-zA-Z_][a-zA-Z_0-9]*)\s*(\n)</string>
			<key>name</key>
			<string>meta.class.python</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>^\s*(class)\s+([a-zA-Z_][a-zA-Z_0-9]*)\s*(\()\s*</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.class.python</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.type.class.python</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.inheritance.begin.python</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\s*(\))(?:(:)|(\n))</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.inheritance.end.python</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.class.begin.python</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.class.python</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;=\(|,)\s*(?=[A-Za-z_])</string>
					<key>contentName</key>
					<string>entity.other.inherited-class.python</string>
					<key>end</key>
					<string>\s*(?:(,)|(?=\)))</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.inheritance.python</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#builtin_types</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#builtin_exceptions</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#dotted_name</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.function.python</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.magic.python</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.python</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.missing-parameters.python</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(?x:^\s*(def)\s*(?:
				(__(?:
					abs|add|and|call|cmp|coerce|complex|contains|del|delattr|
					delete|delitem|delslice|div|divmod|enter|eq|exit|float|
					floordiv|ge|get|getattr|getattribute|getitem|getslice|gt|
					hash|hex|iadd|iand|idiv|ifloordiv|ilshift|imod|imul|init|
					int|invert|ior|ipow|irshift|isub|iter|itruediv|ixor|le|len|
					long|lshift|lt|mod|mul|ne|neg|new|nonzero|oct|or|pos|pow|
					radd|rand|rdiv|rdivmod|repr|rfloordiv|rlshift|rmod|rmul|ror|
					rpow|rrshift|rshift|rsub|rtruediv|rxor|set|setattr|setitem|
					setslice|str|sub|truediv|unicode|xor
				)__) | ([A-Za-z_][A-Za-z_]*))\s*(\n))</string>
			<key>name</key>
			<string>meta.function.python</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>(?x:^\s*(def)\s*(?:
				(__(?:
					abs|add|and|call|cmp|coerce|complex|contains|del|delattr|
					delete|delitem|delslice|div|divmod|enter|eq|exit|float|
					floordiv|ge|get|getattr|getattribute|getitem|getslice|gt|
					hash|hex|iadd|iand|idiv|ifloordiv|ilshift|imod|imul|init|
					int|invert|ior|ipow|irshift|isub|iter|itruediv|ixor|le|len|
					long|lshift|lt|mod|mul|ne|neg|new|nonzero|oct|or|pos|pow|
					radd|rand|rdiv|rdivmod|repr|rfloordiv|rlshift|rmod|rmul|ror|
					rpow|rrshift|rshift|rsub|rtruediv|rxor|set|setattr|setitem|
					setslice|str|sub|truediv|unicode|xor
					)__)
				| ([A-Za-z_][A-Za-z_]*))\s*(\())</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.function.python</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.magic.python</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.python</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.parameters.begin.python</string>
				</dict>
			</dict>
			<key>contentName</key>
			<string>meta.function.parameters.python</string>
			<key>end</key>
			<string>(\))\s*(?:(:)|(\n|#.*$))</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.parameters.end.python</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.function.begin.python</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.missing-section-begin.python</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.function.python</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\b([a-zA-Z_][a-zA-Z_0-9]*)\b\s*(=)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>variable.parameter.function.python</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.assignment.python</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\s*(?:(,)|(?=\))|\n)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.parameters.python</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$base</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>variable.parameter.function.python</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.parameters.python</string>
						</dict>
					</dict>
					<key>match</key>
					<string>\b([a-zA-Z_][a-zA-Z_0-9]*)\b\s*(?:(,)|(?=\)|\n))</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>^\s*((@)(?:[a-zA-Z_][a-zA-Z_0-9]*)(?:\.[a-zA-Z_][a-zA-Z_0-9]*)*)(\()</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.decorator.python</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.decorator.python</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.arguments.begin.python</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>a decorator may be a function call which returns a decorator.</string>
			<key>contentName</key>
			<string>meta.decorator-call.arguments.python</string>
			<key>end</key>
			<string>(\))(?=\s*(?:$|#))</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.arguments.end.python</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.function.decorator.python</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$base</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.decorator.python</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.decorator.python</string>
				</dict>
			</dict>
			<key>match</key>
			<string>^\s*((@)(?:[a-zA-Z_][a-zA-Z_0-9]*)(?:\.[a-zA-Z_][a-zA-Z_0-9]*)*)</string>
			<key>name</key>
			<string>meta.function.decorator.python</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.python</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>keywords that haven't fit into other groups (yet).</string>
			<key>match</key>
			<string>\b(as|assert|del|exec|print)\b</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.control.import.python</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.control.import.from.python</string>
				</dict>
			</dict>
			<key>match</key>
			<string>\b(?:(import)|(from))\b</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.function.python</string>
				</dict>
			</dict>
			<key>match</key>
			<string>\b(def|lambda)\b</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.class.python</string>
				</dict>
			</dict>
			<key>match</key>
			<string>\b(class)\b</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.modifier.global.python</string>
				</dict>
			</dict>
			<key>match</key>
			<string>\b(global)\b</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.python</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.python</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>meta.empty-string.double.python</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(?&lt;!")(")(("))(?!")</string>
			<key>name</key>
			<string>string.quoted.double.single-line.python</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.python</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.python</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>meta.empty-string.single.python</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(?&lt;!')(')(('))(?!')</string>
			<key>name</key>
			<string>string.quoted.single.single-line.python</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>((?i:ur))(''')</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>string.prefix.python</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.python</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>single quoted raw-unicode string</string>
			<key>end</key>
			<string>(''')</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.python</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.single.block.raw-unicode.python</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>source.regexp</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#constant_placeholder</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#escaped_char</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>((?i:ur))(""")</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>string.prefix.python</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.python</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>single quoted raw-unicode string</string>
			<key>end</key>
			<string>(""")</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.python</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.double.block.raw-unicode.python</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>source.regexp</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#constant_placeholder</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#escaped_char</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>([rR])(''')</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>string.prefix.python</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.python</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>single quoted raw string</string>
			<key>end</key>
			<string>(''')</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.python</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.single.block.raw.python</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>source.regexp</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#constant_placeholder</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#escaped_char</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>([rR])(""")</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>string.prefix.python</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.python</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>double quoted raw string</string>
			<key>end</key>
			<string>(""")</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.python</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.double.block.raw.python</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>source.regexp</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#constant_placeholder</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#escaped_char</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>([uU])(''')</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>string.prefix.python</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.python</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>single quoted unicode string</string>
			<key>end</key>
			<string>(''')</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.python</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.single.block.unicode.python</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#constant_placeholder</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#escaped_char</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>([uU])(""")</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>string.prefix.python</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.python</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>double quoted unicode string</string>
			<key>end</key>
			<string>(""")</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.python</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.double.block.unicode.python</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#constant_placeholder</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#escaped_char</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>((?i:ur))(')</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>string.prefix.python</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.python</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>single quoted raw string</string>
			<key>end</key>
			<string>(')|(\n)</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.python</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.unclosed-string.python</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.single.single-line.raw-unicode.python</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>source.regexp</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#constant_placeholder</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#escaped_char</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>((?i:ur))(")</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>string.prefix.python</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.python</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>double-quoted raw string</string>
			<key>end</key>
			<string>(")|(\n)</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.python</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.unclosed-string.python</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.double.single-line.raw-unicode.python</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>source.regexp</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#constant_placeholder</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#escaped_char</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>([rR])(")</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>string.prefix.python</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.python</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>double-quoted raw string</string>
			<key>end</key>
			<string>(")|(\n)</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.python</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.unclosed-string.python</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.double.single-line.raw.python</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>source.regexp</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#constant_placeholder</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#escaped_char</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>([rR])(')</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>string.prefix.python</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.python</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>single quoted raw string</string>
			<key>end</key>
			<string>(')|(\n)</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.python</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.unclosed-string.python</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.single.single-line.raw.python</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>source.regexp</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#constant_placeholder</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#escaped_char</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>([rR])(")</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>string.prefix.python</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.python</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>double-quoted raw string</string>
			<key>end</key>
			<string>(")|(\n)</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.python</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.unclosed-string.python</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.double.single-line.raw.python</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>source.regexp</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#constant_placeholder</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#escaped_char</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>[uU](')</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.python</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>single quoted unicode string</string>
			<key>end</key>
			<string>(')|(\n)</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.python</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.unclosed-string.python</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.single.single-line.unicode.python</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#constant_placeholder</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#escaped_char</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>([uU])(")</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>string.prefix.python</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.python</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>double quoted unicode string</string>
			<key>end</key>
			<string>(")|(\n)</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.python</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.unclosed-string.python</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.double.single-line.unicode.python</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#constant_placeholder</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#escaped_char</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>(''')</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.python</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>single quoted string</string>
			<key>end</key>
			<string>(''')</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.python</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.single.block.python</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#constant_placeholder</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#escaped_char</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>(""")</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.python</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>double quoted string</string>
			<key>end</key>
			<string>(""")</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.python</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.double.block.python</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#constant_placeholder</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#escaped_char</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>(')</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.python</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>single quoted string</string>
			<key>end</key>
			<string>(')|(\n)</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.python</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.unclosed-string.python</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.single.single-line.python</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#constant_placeholder</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#escaped_char</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>(")</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.python</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>double quoted string</string>
			<key>end</key>
			<string>(")|(\n)</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.python</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.unclosed-string.python</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.double.single-line.python</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#constant_placeholder</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#escaped_char</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(None|True|False|Ellipsis|NotImplemented)\b</string>
			<key>name</key>
			<string>constant.language.python</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>magic attributes which a class/module may have.</string>
			<key>match</key>
			<string>\b__(all|bases|class|debug|dict|doc|file|members|metaclass|methods|name|slots|weakref)__\b</string>
			<key>name</key>
			<string>support.variable.attribute.magic.python</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?x:\b(
                __import__|all|abs|any|apply|callable|chr|cmp|coerce|compile|delattr|dir|
                divmod|eval|execfile|filter|getattr|globals|hasattr|hash|hex|id|
                input|intern|isinstance|issubclass|iter|len|locals|map|max|min|oct|
                ord|pow|range|raw_input|reduce|reload|repr|round|setattr|sorted|
                sum|unichr|vars|zip
			)\b)</string>
			<key>name</key>
			<string>support.function.builtin.python</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#builtin_types</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#builtin_exceptions</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#magic_method_name</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>([A-Za-z_][A-Za-z0-9_]*)\s*\[</string>
			<key>end</key>
			<string>\]</string>
			<key>name</key>
			<string>meta.item-access.python</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$base</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>match</key>
			<string>([A-Za-z_][A-Za-z0-9_]*)\.</string>
			<key>name</key>
			<string>meta.attribute-access.python</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>([A-Za-z_][A-Za-z0-9_]*)\s*\(</string>
			<key>contentName</key>
			<string>meta.function-call.arguments.python</string>
			<key>end</key>
			<string>\)</string>
			<key>name</key>
			<string>meta.function-call.python</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$base</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.list.begin.python</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>meta.empty-list.python</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.list.end.python</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(\[)(\s*(\]))\b</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>(\[)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.list.begin.python</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(\])</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.list.end.python</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.structure.list.python</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;=\[|\,)\s*(?![\],])</string>
					<key>contentName</key>
					<string>meta.structure.list.item.python</string>
					<key>end</key>
					<string>\s*(?:(,)|(?=\]))</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.list.python</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$base</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.tuple.begin.python</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>meta.empty-tuple.python</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.tuple.end.python</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(\()(\s*(\)))</string>
			<key>name</key>
			<string>meta.structure.tuple.python</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.dictionary.begin.python</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>meta.empty-dictionary.python</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.dictionary.end.python</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(\{)(\s*(\}))</string>
			<key>name</key>
			<string>meta.structure.dictionary.python</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>(\{)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.dictionary.begin.python</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(\})</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.dictionary.end.python</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.structure.dictionary.python</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;=\{|\,|^)\s*(?![\},])</string>
					<key>contentName</key>
					<string>meta.structure.dictionary.key.python</string>
					<key>end</key>
					<string>\s*(?:(?=\})|(\:))</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.valuepair.dictionary.python</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$base</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?&lt;=\:|^)\s*</string>
					<key>contentName</key>
					<string>meta.structure.dictionary.value.python</string>
					<key>end</key>
					<string>\s*(?:(?=\})|(,))</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.dictionary.python</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$base</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>builtin_exceptions</key>
		<dict>
			<key>match</key>
			<string>\b((Arithmetic|Assertion|Attribute|EOF|Environment|FloatingPoint|IO|Import|Indentation|Index|Key|Lookup|Memory|Name|OS|Overflow|NotImplemented|Reference|Runtime|Standard|Syntax|System|Tab|Type|UnboundLocal|Unicode(Translate|Encode|Decode)?|Value|ZeroDivision)Error|(Deprecation|Future|Overflow|PendingDeprecation|Runtime|Syntax|User)?Warning|KeyboardInterrupt|NotImplemented|StopIteration|SystemExit|(Base)?Exception)\b</string>
			<key>name</key>
			<string>support.type.exception.python</string>
		</dict>
		<key>builtin_types</key>
		<dict>
			<key>match</key>
			<string>(?x:\b(
				basestring|bool|buffer|classmethod|complex|dict|enumerate|file|
				float|frozenset|int|list|long|object|open|property|reversed|set|
				slice|staticmethod|str|super|tuple|type|unicode|xrange
			)\b)</string>
			<key>name</key>
			<string>support.type.python</string>
		</dict>
		<key>constant_placeholder</key>
		<dict>
			<key>match</key>
			<string>(?i:%(\([a-z_]+\))?#?0?\-?[ ]?\+?([0-9]*|\*)(\.([0-9]*|\*))?[hL]?[a-z%])</string>
			<key>name</key>
			<string>constant.other.placeholder.python</string>
		</dict>
		<key>dotted_name</key>
		<dict>
			<key>match</key>
			<string>\b((?:[A-Za-z_][A-Za-z0-9_]*)(?:\.(?:[A-Za-z_][A-Za-z0-9_]*)*)*)\b</string>
		</dict>
		<key>escaped_char</key>
		<dict>
			<key>match</key>
			<string>\\[.\n]</string>
			<key>name</key>
			<string>constant.character.escape.python</string>
		</dict>
		<key>magic_method_name</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.magic.python</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>these methods have magic interpretation by python and are generally called indirectly through syntactic constructs</string>
			<key>match</key>
			<string>(?x:\b
				(__(?:
					abs|add|and|call|cmp|coerce|complex|contains|del|delattr|
					delete|delitem|delslice|div|divmod|enter|eq|exit|float|
					floordiv|ge|get|getattr|getattribute|getitem|getslice|gt|
					hash|hex|iadd|iand|idiv|ifloordiv|ilshift|imod|imul|init|
					int|invert|ior|ipow|irshift|isub|iter|itruediv|ixor|le|len|
					long|lshift|lt|mod|mul|ne|neg|new|nonzero|oct|or|pos|pow|
					radd|rand|rdiv|rdivmod|repr|rfloordiv|rlshift|rmod|rmul|ror|
					rpow|rrshift|rshift|rsub|rtruediv|rxor|set|setattr|setitem|
					setslice|str|sub|truediv|unicode|xor
				)__)
			\b)</string>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.python</string>
	<key>uuid</key>
	<string>F23DB5B2-7D08-11D9-A709-000D93B6E43C</string>
</dict>
</plist>
