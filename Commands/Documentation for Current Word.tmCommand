<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>beforeRunningCommand</key>
	<string>nop</string>
	<key>command</key>
	<string># set up TM_FIRST_LINE containing the first line of the script.
read first_line
0&lt;&amp;- # close STDIN
export TM_FIRST_LINE="$first_line"

export PYTHONPATH="$TM_BUNDLE_SUPPORT/DocMate:$PYTHONPATH"
export PYTHONPATH="$TM_SUPPORT_PATH/lib:$PYTHONPATH"

/usr/bin/python2.3 -S - &lt;&lt;PYTHON
# coding: UTF-8
import sys
from sys import exit

import tm_helpers
import docmate
import dialog

docmate.launch_pydoc_server()

# get current dotted word from the env
word = tm_helpers.current_word(r"[A-Za-z0-9_\.]*")

if not word:
	print "&lt;meta http-equiv='Refresh' content='0;URL=%s'&gt;" % docmate.PYDOC_URL
	exit(205)

opts = docmate.doc(word)
if opts:
	url = ""
	if len(opts) == 1:
		# only one option, so don't bother with a menu.
		url = opts[0][1]
	elif len(opts) == 0:
		print "Didn't find any documentation for '%s'." % word
		exit(206) # show as tooltip.
	else:
		# get user input.
		url = dialog.menu(opts)
	if url:
		docmate.increment_hitcount(url)
		print "&lt;meta http-equiv='Refresh' content='0;URL=%s'&gt;" % url
		exit(205) # show as html.
	else:
		exit(200) # exit and discard (user pressed ESC)
PYTHON
</string>
	<key>input</key>
	<string>document</string>
	<key>keyEquivalent</key>
	<string>^h</string>
	<key>name</key>
	<string>Documentation for Current Word</string>
	<key>output</key>
	<string>showAsTooltip</string>
	<key>scope</key>
	<string>source.python</string>
	<key>uuid</key>
	<string>443BBF21-6124-4486-BFCA-D18606465885</string>
</dict>
</plist>
